version: "3.9"

services:
  litespeed:
    image: litespeedtech/openlitespeed:1.7.17-lsphp81
    container_name: litespeed
    depends_on:
      - mariadb
      - redis
    ports:
      - "80:80"
      - "443:443"
    env_file: ./.env
    volumes:
      # WordPress
      - wp:/var/www/vhosts/localhost/html
      # Config do OLS persistente
      - lsws-conf:/usr/local/lsws/conf
      # Certificados Let‚Äôs Encrypt compartilhados
      - letsencrypt:/etc/letsencrypt
      # Seu entrypoint custom
      - ./entrypoint.sh:/usr/local/bin/entrypoint.sh:ro
    command: [ "bash", "/usr/local/bin/entrypoint.sh" ]
    restart: unless-stopped

  mariadb:
    image: mariadb:10.11
    container_name: mariadb
    env_file: ./.env
    environment:
      - MYSQL_DATABASE=${WORDPRESS_DB_NAME}
      - MYSQL_USER=${WORDPRESS_DB_USER}
      - MYSQL_PASSWORD=${WORDPRESS_DB_PASSWORD}
      - MYSQL_ROOT_PASSWORD=${WORDPRESS_DB_PASSWORD}
    volumes:
      - mariadb-data:/var/lib/mysql
    restart: unless-stopped

  redis:
    image: redis:7-alpine
    container_name: redis
    command: ["redis-server","--appendonly","yes","--requirepass","${WP_REDIS_PASSWORD}"]
    volumes:
      - redis-data:/data
    restart: unless-stopped

  # ‚Äî‚Äî‚Äî Certbot via HTTP-01 (webroot) ‚Äî‚Äî‚Äî
  certbot:
    image: certbot/certbot:latest
    container_name: certbot
    env_file: ./.env
    depends_on:
      - litespeed
    volumes:
      # O token do ACME vai ser gravado e servido pelo OLS (webroot)
      - wp:/var/www/vhosts/localhost/html:rw
      # Onde ficam os certificados emitidos/renovados
      - letsencrypt:/etc/letsencrypt
    entrypoint: /bin/sh
    command: |
      sh -c '
        set -e
        echo "‚û°Ô∏è Emitindo/renovando certificados (HTTP-01 via webroot)..."
        certbot certonly --webroot \
          -w /var/www/vhosts/localhost/html \
          -d ${DOMAIN} ${EXTRA_DOMAINS} \
          --email ${LE_EMAIL} --agree-tos --non-interactive --keep-until-expiring

        echo "üîÅ Iniciando loop de renova√ß√£o (12h)..."
        while :; do
          certbot renew --webroot -w /var/www/vhosts/localhost/html --quiet || true
          sleep 12h
        done
      '
    restart: unless-stopped

  # ‚Äî‚Äî‚Äî ALTERNATIVA: Certbot DNS-01 p/ WILDCARD (exemplo Cloudflare) ‚Äî‚Äî‚Äî
  # certbot-dns:
  #   image: certbot/dns-cloudflare:latest
  #   container_name: certbot-dns
  #   env_file: ./.env
  #   environment:
  #     - CLOUDFLARE_API_TOKEN=${CLOUDFLARE_API_TOKEN}
  #   volumes:
  #     - letsencrypt:/etc/letsencrypt
  #     - ./cloudflare.ini:/root/.secrets/certbot/cloudflare.ini:ro
  #   entrypoint: /bin/sh
  #   command: -c "
  #     set -e;
  #     certbot certonly --dns-cloudflare --dns-cloudflare-credentials /root/.secrets/certbot/cloudflare.ini \
  #       -d ${DOMAIN} -d *.${DOMAIN} \
  #       --email ${LE_EMAIL} --agree-tos --non-interactive --keep-until-expiring;
  #     while :; do
  #       certbot renew --quiet;
  #       sleep 12h;
  #     done
  #   "
  #   restart: unless-stopped

volumes:
  wp:
  mariadb-data:
  redis-data:
  lsws-conf:
  letsencrypt:
