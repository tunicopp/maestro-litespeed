name: wordpress-litespeed

networks:
  wp_network:
  proxy:
    driver: bridge

volumes:
  traefik_letsencrypt:
  wp_maestro:
  wp_maestro_cache:
  mariadb_data:
  redis_data:

services:
  traefik:
    image: traefik:v3.1
    container_name: traefik
    restart: unless-stopped
    command:
      # Entrypoints
      - --entrypoints.web.address=:80
      - --entrypoints.websecure.address=:443

      # Descoberta via Docker + labels
      - --providers.docker=true
      - --providers.docker.exposedbydefault=false

      # (Opcional) arquivos dinâmicos p/ middlewares/hosts fixos
      - --providers.file.directory=/dynamic
      - --providers.file.watch=true

      # ACME - resolver 1 (DNS-01) p/ wildcard (*.DOMAIN_BASE)
      - --certificatesresolvers.le-dns.acme.dnschallenge=true
      - --certificatesresolvers.le-dns.acme.dnschallenge.provider=route53
      - --certificatesresolvers.le-dns.acme.email=${LE_EMAIL}
      - --certificatesresolvers.le-dns.acme.storage=/letsencrypt/acme-dns.json

      # ACME - resolver 2 (HTTP-01) p/ domínios mapeados (site1.com.br etc.)
      - --certificatesresolvers.le-http.acme.email=${LE_EMAIL}
      - --certificatesresolvers.le-http.acme.storage=/letsencrypt/acme-http.json
      - --certificatesresolvers.le-http.acme.httpchallenge=true
      - --certificatesresolvers.le-http.acme.httpchallenge.entrypoint=web

      # Redirect HTTP -> HTTPS
      - --entrypoints.web.http.redirections.entrypoint.to=websecure
      - --entrypoints.web.http.redirections.entrypoint.scheme=https

    environment:
      # Token do provedor DNS (Cloudflare) para DNS-01
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - AWS_REGION=${AWS_REGION}
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - traefik_letsencrypt:/letsencrypt
      - ./dynamic:/dynamic
    networks:
      - proxy
    profiles: ["dev","prod"]

  mariadb:
    image: mariadb:10.11
    container_name: mariadb
    restart: unless-stopped
    env_file: .env
    environment:
      - MARIADB_DATABASE=${WORDPRESS_DB_NAME}
      - MARIADB_USER=${WORDPRESS_DB_USER}
      - MARIADB_PASSWORD=${WORDPRESS_DB_PASSWORD}
      - MARIADB_ROOT_PASSWORD=${MARIADB_ROOT_PASSWORD}
    volumes:
      - mariadb_data:/var/lib/mysql
    networks:
      - wp_network
    profiles: ["dev","prod"]

  redis:
    image: redis:alpine
    container_name: redis
    restart: unless-stopped
    env_file: .env
    command: ["redis-server", "--appendonly", "yes", "--requirepass", "${WP_REDIS_PASSWORD}"]
    environment:
      - REDIS_PASSWORD=${WP_REDIS_PASSWORD}
    volumes:
      - redis_data:/data
    networks:
      - wp_network
    profiles: ["dev","prod"]

  litespeed:
    # Se preferir imagem oficial:
    # image: litespeedtech/openlitespeed:1.7.17-lsphp81
    # Ou mantenha seu Dockerfile custom:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: litespeed
    restart: unless-stopped
    env_file: .env
    volumes:
      - wp_maestro:/var/www/vhosts/localhost/html
      - wp_maestro_cache:/var/www/vhosts/localhost/cache
      # Exemplo de ini custom:
      # - ./config/php.conf.ini:/usr/local/etc/php/conf.d/conf.ini:ro

    expose:
      - "8080"  # site/app
      - "7080"  # WebAdmin OLS (interno)

    networks:
      - wp_network
      - proxy

    labels:
      - traefik.enable=true

      # ── Router 1 — Multisite (subdomínios *.${DOMAIN_BASE}) via DNS-01/wildcard
      - "traefik.http.routers.wp-ms.rule=HostRegexp(`{subdomain:.+}.${DOMAIN_BASE}`)"
      - traefik.http.routers.wp-ms.entrypoints=websecure
      - traefik.http.routers.wp-ms.tls.certresolver=le-dns
      - traefik.http.services.wp-ms.loadbalancer.server.port=8080

      # ── Router 2 — Domínios mapeados (site1.com.br, loja-x.com...) via HTTP-01
      - "traefik.http.routers.wp-map.rule=HostRegexp(`{anydomain:.+}`)"
      - traefik.http.routers.wp-map.entrypoints=websecure
      - traefik.http.routers.wp-map.tls.certresolver=le-http
      - traefik.http.routers.wp-map.priority=1
      - traefik.http.services.wp-map.loadbalancer.server.port=8080

    depends_on:
      - mariadb
    profiles: ["dev","prod"]
